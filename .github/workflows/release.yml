name: Automated Release

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:

      - name: Set up JDK 21
        uses: actions/setup-java@v4.6.0
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Extract version
        id: extract-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build JARs
        run: mvn clean install package

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: jar-files
          path: target/Snake-*.jar

  release:
    runs-on: ubuntu-24.04
    needs: build

    steps:

      - name: Set Parameters
        run: |
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          echo "version=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
          echo "release-name=Snake v${{ needs.build.outputs.version }}" >> $GITHUB_ENV
          echo "slim-asset-name=Snake-texture-streaming.jar" >> $GITHUB_ENV
          echo "full-asset-name=Snake.jar" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install GitHub CLI and authenticate
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.63.2/gh_2.63.2_linux_amd64.deb -o gh-cli.deb
          sudo dpkg -i gh-cli.deb
          sudo apt install -f
          echo ${{ env.token }} | gh auth login --with-token

      - name: Check for existing release
        run: |
          VERSION="${{ env.version }}"
          TAG_EXISTS=$(gh release view "$VERSION" --json tagName --jq ".tagName" 2>&1 || true)
          echo "TAG_EXISTS: $TAG_EXISTS"
          if [[ "$TAG_EXISTS" == *"release not found"* ]]; then
            echo "No release tag found for version $VERSION."
          else
            echo "Release tag found: $TAG_EXISTS"
            echo "Deleting release and tag: $TAG_EXISTS"
            gh release delete "$TAG_EXISTS" -y --cleanup-tag
            if git rev-parse "$TAG_EXISTS" >/dev/null 2>&1; then
              git tag -d "$TAG_EXISTS"
              git push origin --delete "$TAG_EXISTS"
            else
              echo "Tag $TAG_EXISTS not found locally."
            fi
          fi

      - name: Download JAR artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: jar-files

      - name: Calculate Hashes
        run: |
          FILE=$(find . -name "Snake-slim-*.jar")
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "slim-md5=$MD5" >> $GITHUB_ENV
          echo "slim-sha1=$SHA1" >> $GITHUB_ENV
          echo "slim-sha256=$SHA256" >> $GITHUB_ENV
          echo "slim-file=$FILE" >> $GITHUB_ENV
          
          FILE=$(find . -name "Snake-full-*.jar")
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "full-md5=$MD5" >> $GITHUB_ENV
          echo "full-sha1=$SHA1" >> $GITHUB_ENV
          echo "full-sha256=$SHA256" >> $GITHUB_ENV
          echo "full-file=$FILE" >> $GITHUB_ENV

      - name: Rename JAR files
        run: |
          mv ${{ env.slim-file }} ${{ env.slim-asset-name }}
          mv ${{ env.full-file }} ${{ env.full-asset-name }}
          echo "slim-file=${{ env.slim-asset-name }}" >> $GITHUB_ENV
          echo "full-file=${{ env.full-asset-name }}" >> $GITHUB_ENV

      - name: Create new release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.slim-file }}, ${{ env.full-file }}
          tag_name: ${{ env.version }}
          name: ${{ env.release-name }}
          body: |
            **Full Changelog**: https://github.com/MCmoderSD/GitHubActionsTest/commits/${{ env.version }}


            ## Checksums:

            ### Snake.jar

            - MD5: ${{ env.full-md5 }}
            - SHA1: ${{ env.full-sha1 }}
            - SHA256: ${{ env.full-sha256 }}

            ### Snake-texture-streaming.jar

            - MD5: ${{ env.slim-md5 }}
            - SHA1: ${{ env.slim-sha1 }}
            - SHA256: ${{ env.slim-sha256 }}