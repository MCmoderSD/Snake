name: Automated Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - closed

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:

      - name: Set up JDK 21
        uses: actions/setup-java@v4.6.0
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Extract version from pom.xml
        id: extract-version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build JARs
        id: build
        run: |
          mvn clean package
          SLIM=$(find target -name "Snake-slim-*.jar")
          FULL=$(find target -name "Snake-full-*.jar")
          echo "slim=$SLIM" >> $GITHUB_OUTPUT
           echo "full=$FULL" >> $GITHUB_OUTPUT

      - name: Upload slim JAR as artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: slim-jar-file
          path: ${{ steps.build.outputs.slim }}

      - name: Upload full JAR as artifact
        uses: actions/upload-artifact@v4.5.0
        with:
          name: full-jar-file
          path: ${{ steps.build.outputs.full }}

  release:
    runs-on: ubuntu-24.04
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install GitHub CLI and authenticate
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.63.2/gh_2.63.2_linux_amd64.deb -o gh-cli.deb
          sudo dpkg -i gh-cli.deb
          sudo apt install -f
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Check for existing release
        id: check-release
        run: |
          VERSION="${{ needs.build.outputs.version }}"
          
          # Try to view the release; capture both stdout and stderr
          TAG_EXISTS=$(gh release view "$VERSION" --json tagName --jq ".tagName" 2>&1 || true)
          
          # Debugging the value of TAG_EXISTS
          echo "TAG_EXISTS: $TAG_EXISTS"
          
          # If the output contains "release not found", handle gracefully
          if [[ "$TAG_EXISTS" == *"release not found"* ]]; then
            echo "No release tag found for version $VERSION."
          else
            echo "Release tag found: $TAG_EXISTS"
            echo "Deleting release and tag: $TAG_EXISTS"
          
            # Delete the release and its associated tag
            gh release delete "$TAG_EXISTS" -y --cleanup-tag
          
            # Check if the tag exists before attempting to delete it
            if git rev-parse "$TAG_EXISTS" >/dev/null 2>&1; then
              git tag -d "$TAG_EXISTS"
              git push origin --delete "$TAG_EXISTS"
            else
              echo "Tag $TAG_EXISTS not found locally."
            fi
          fi

      - name: Download slim JAR artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: slim-jar-file

      - name: Download full JAR artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: full-jar-file

      - name: Calculate Hash of the full JAR file
        id: hash
        run: |
          FILE=$(find . -name "Snake-slim-*.jar")
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "slim-md5=$MD5" >> $GITHUB_OUTPUT
          echo "slim-sha1=$SHA1" >> $GITHUB_OUTPUT
          echo "slim-sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "slim-file=$FILE" >> $GITHUB_OUTPUT

      - name: Calculate Hash of the full JAR file
        id: hash
        run: |
          FILE=$(find . -name "Snake-full-*.jar")
          MD5=$(md5sum "$FILE" | cut -d ' ' -f 1)
          SHA1=$(sha1sum "$FILE" | cut -d ' ' -f 1)
          SHA256=$(sha256sum "$FILE" | cut -d ' ' -f 1)
          echo "full-md5=$MD5" >> $GITHUB_OUTPUT
          echo "full-sha1=$SHA1" >> $GITHUB_OUTPUT
          echo "full-sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "full-file=$FILE" >> $GITHUB_OUTPUT

      - name: Create a new release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: '${{ needs.build.outputs.version }}'
          release_name: 'Snake v${{ needs.build.outputs.version }}'
          body: |
            **Full Changelog**: https://github.com/MCmoderSD/Snake/commits/${{ needs.build.outputs.version }}


            ## Checksums:
            
            ### Snake.jar
            
            - MD5: ${{ steps.hash.outputs.full-md5 }}
            - SHA1: ${{ steps.hash.outputs.full-sha1 }}
            - SHA256: ${{ steps.hash.outputs.full-sha256 }}
            
            ### Snake-texture-streaming.jar
            
            - MD5: ${{ steps.hash.outputs.slim-md5 }}
            - SHA1: ${{ steps.hash.outputs.slim-sha1 }}
            - SHA256: ${{ steps.hash.outputs.slim-sha256 }}

          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload slim JAR to release
        uses: actions/upload-release-asset@v1
        with:
          asset_name: Snake-texture-streaming-${{ needs.build.outputs.version }}.jar
          asset_content_type: application/java-archive
          asset_path: ${{ steps.hash.outputs.slim-file }}
          upload_url: ${{ steps.create-release.outputs.upload_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload full JAR to release
        uses: actions/upload-release-asset@v1
        with:
          asset_name: Snake-${{ needs.build.outputs.version }}.jar
          asset_content_type: application/java-archive
          asset_path: ${{ steps.hash.outputs.full-file }}
          upload_url: ${{ steps.create-release.outputs.upload_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}